
{
  "title":"Lecture 9",
  "content":" Getters and Setters Which of the below is a getter method for the number of wheels?\n----------------------------------\r----------- Given ------------\r----------------------------------\rclass Car(object):\rdef __init__(self, w, d):\rself.wheels = w\rself.doors = d\rself.color = \u0026#34;\u0026#34;\r----------------------------------\r(A) def get_wheels():\rreturn wheels\r(B) def get_wheels():\rreturn self.wheels\r(C) def get_wheels(self):\rreturn wheels\r(D) def get_wheels(self):\rreturn self.wheels def get_wheels():\rclose def get_wheels():\rclose def get_wheels(self):\rclose def get_wheels(self):\rcheck Check \u0026emsp; Show Solution View video page Download video Download transcript Subclass Whate line could replace ____blank____ to create a class that inherets from Animal in the code below?\n____blank____\rdef speak(self):\rprint(\u0026#34;ruff ruff\u0026#34;)\r(line1) d = Dog(7)\r(line2) d.set_name(\u0026#34;Ruffles\u0026#34;)\r(line3) d.speak() \u0026nbsp;class Dog(Animal):\u0026nbsp; check \u0026nbsp;class Animal(Dog):\u0026nbsp; close \u0026nbsp;class Dog(object)\u0026nbsp; close Check With this definition of Dog, you run a program with line1, line2, and line3 above. What happens? Refer to the lecture slides for the code making up the \u0026ldquo;Animal\u0026rdquo; class.\n\u0026nbsp;Error on (line1) because Dog does not have an \\_\\_init\\_\\_\u0026nbsp; close \u0026nbsp;Uses the \\_\\_init\\_\\_ from Animal, but then an error (line2) because Dog does not have a set\\_name method.\u0026nbsp; close \u0026nbsp;Uses the \\_\\_init\\_\\_ and set\\_name from Animal, but then an error (line3) because all methods must return something.\u0026nbsp; close \u0026nbsp;Runs, creates a Dog object with age=7 and name=\"Ruffles\", and prints \"ruff ruff\"\u0026nbsp; check Check \u0026emsp; Show Solution View video page Download video Download transcript "}


